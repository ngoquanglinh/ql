<!-- The Modal -->
<div class="modal" id="detailDocumentModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" style="min-width: 80%" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="text-center">Chi tiết công văn</h3>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-8">
                        <div class="">
                            <div class="sub-title p-2">Danh sách thẻ</div>
                            <div id="listTagsEdit" class="d-flex flex-wrap">
                            </div>
                        </div>
                        <div class="">
                            <div class="sub-title p-2">Tóm tắt</div>

                            <div>
                                <%if(helpers.hasCap(claims,"manage|put")){%>
                                <textarea class="form-control" rows="3" value="" id="summaryEdit"></textarea>
                                <%}else{%>
                                <textarea class="form-control" rows="3" value="" id="summaryEdit" disabled></textarea>
                                <%}%>
                            </div>
                        </div>
                        <div class="">
                            <div class="sub-title p-2">Tệp đính kèm</div>               
                            <div>
                                <%if(helpers.hasCap(claims,"manage|put")){%>
                                <input type="file" class="form-control-file" value="" id="fileUploadsEdit" multiple>
                                <%}else{%>
                                <input type="file" class="form-control-file" value="" id="fileUploadsEdit" multiple
                                    disabled>
                                <%}%>       
                            </div>
                        </div>
                        <div class="" id="listImageEdit">

                        </div>
                        <div class="sub-title p-2">Nội dung</div>
                        <div>
                            <%if(helpers.hasCap(claims,"manage|put")){%>
                                <textarea cols="10" class="form-control" rows="3"
                                    id="contentDocumentaryEdit"></textarea>
                                <%}else{%>
                                <textarea cols="10" class="form-control" rows="3" id="contentDocumentaryEdit"
                                    disabled></textarea>
                                <%}%>
                        </div>
                    </div>
                    <div class="col-4">
                        <div>
                            <div class="sub-title p-2">Số văn bản</div>
                            <%if(helpers.hasCap(claims,"manage|put")){%>
                                <input type="text" class="form-control" value="" id="numberDocumentaryEdit"
                                    placeholder="Số văn bản...">
                                <%}else{%>
                                <input disabled type="text" class="form-control" value="" id="numberDocumentaryEdit"
                                    placeholder="Số văn bản...">
                                <%}%>
                        </div>
                        <div>
                            <div class="sub-title p-2">Tên văn bản</div>
                            <div>
                                <%if(helpers.hasCap(claims,"manage|put")){%>
                                <input type="text" class="form-control" id="nameEdit" value=""
                                    placeholder="Tên công văn...">
                                <%}else{%>
                                <input disabled type="text" class="form-control" id="nameEdit" value=""
                                    placeholder="Tên công văn...">
                                <%}%>
                            </div>
                        </div>
                        <div>
                            <div class="sub-title p-2">Nơi gửi</div>
                            <div>
                                <%if(helpers.hasCap(claims,"manage|put")){%>
                                <input type="text" class="form-control" id="addressSendingEdit" value=""
                                    placeholder="Tên công văn...">
                                <%}else{%>
                                <input disabled type="text" class="form-control" id="addressSendingEdit" value=""
                                    placeholder="Tên công văn...">
                                <%}%>
                            </div>
                        </div>
                        <div>
                            <div class="sub-title p-2">Nơi ký</div>
                            <div>
                                <%if(helpers.hasCap(claims,"manage|put")){%>
                                <input type="text" class="form-control" value="" id="addressSignEdit" value=""
                                    placeholder="Tên công văn...">
                                <%}else{%>
                                <input disabled type="text" class="form-control" value="" id="addressSignEdit" value=""
                                    placeholder="Tên công văn...">
                                <%}%>
                            </div>
                        </div>
                        <div>
                            <div class="sub-title p-2">Loại công việc</div>
                            <div>
                                <%if(helpers.hasCap(claims,"manage|put")){%>
                                <select class="select-category w-100" value="">
                                </select>
                                <%}else{%>
                                <select disabled class="select-category w-100" value="">
                                </select>
                                <%}%>
                            </div>
                        </div>
                        <%if(helpers.hasCap(claims,"manage|put")){%>
                                <div id="showDepSelect">
                                    <div class="sub-title p-2">Phòng ban</div>
                                    <div>
                                        <select class="w-100" id="selectUser2" value="">
                                        </select>
                                    </div>
                                </div>
                                <div id="showUserSelect">
                                    <div class="sub-title p-2">Nhân viên</div>
                                    <div>
                                        <select class="w-100" id="selectUser3" multiple="multiple" value="">
                                        </select>
                                    </div>
                                </div>
                                <%}else{%>
                                <div class="d-none" id="showDepSelect">
                                    <div class="sub-title p-2">Phòng ban</div>
                                    <div>
                                        <select class="w-100" id="selectUser2" value="">
                                        </select>
                                    </div>
                                </div>
                                <div id="showUserSelect">
                                    <div class="sub-title p-2">Nhân viên</div>
                                    <div>
                                        <select class="w-100" id="selectUser3" multiple="multiple" value="">
                                        </select>
                                    </div>
                                </div>
                                <%}%>
                        <div>
                            <div class="sub-title p-2">Ngày tạo</div>
                            <div>
                                <input type="text" class="form-control" id="calendarTomorrowEdit" readonly value="">
                            </div>
                        </div>
                        <div>
                            <div class="sub-title p-2">Ngày hiệu lực</div>
                            <div>
                                <%if(helpers.hasCap(claims,"manage|put")){%>
                                <input type="text" class="form-control" id="effectiveDateEdit" value="">
                                <%}else{%>
                                <input disabled type="text" class="form-control" id="effectiveDateEdit" value="">
                                <%}%>
                            </div>
                        </div>
                        <div>
                            <div class="sub-title p-2">Ngày hết hiệu lực</div>
                            <div>
                                <%if(helpers.hasCap(claims,"manage|put")){%>
                                <input type="text" class="form-control" id="expirationDateEdit" value="">
                                <%}else{%>
                                <input disabled type="text" class="form-control" id="expirationDateEdit" value="">
                                <%}%>
                            </div>
                        </div>
                        <div class="d-none" id="processShow">
                            <div class="sub-title p-2">Tiến trình (%)</div>
                            <div>
                                <%if(helpers.hasCap(claims,"manage|put")){%>
                                <input type="number" class="form-control" id="process" value="" min="10" max="100">
                                <%}else{%>
                                <input disabled type="number" class="form-control" id="process" value="" min="10"
                                    max="100">
                                <%}%>
                            </div>
                        </div>
                        <div>
                            <div class="sub-title p-2">Thẻ</div>
                            <div>
                                <button type="button" onclick="openTags()" class="btn btn-secondary w-100">Thẻ</button>
                            </div>
                        </div>
                        <div class="d-flex justify-content-start">
                            <div class="w-50">
                                <div class="sub-title p-2">Loại công văn</div>
                                <%if(helpers.hasCap(claims,"manage|put")){%>
                                <select id="selectTypeDocumentary" class="w-100" value="">
                                </select>
                                <%}else{%>
                                <select disabled id="selectTypeDocumentary" class="w-100" value="">
                                </select>
                                <%}%>
                            </div>
                            <div class="ml-2 w-50">
                                <div class="sub-title p-2">Trạng thái</div>
                                <select id="selectStatusDocumentary" class="w-100" value="">

                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer mt-1" id="dataIdDocument">
                    <%if(helpers.hasCap(claims,"manage|delete")){%>
                                <button type="button" class="btn btn-danger" id="deleteDocument"
                                    data-dismiss="modal">Xóa</button>
                                <%}%>
                                <button type="button" class="btn btn-primary" id="submitDocumentaryEdit">Cập
                                    nhật</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal" id="modalAssignTags" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4>Danh Sách Thẻ</h4>
                </div>
                <div class="modal-body">
                    <div id="listTagsAssign">

                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        // todo : calendar
        flatpickr('#calendarTomorrowEdit', {
            "minDate": new Date().fp_incr(1),
            dateFormat: "d-m-Y",
            defaultDate: new Date().fp_incr(1),
            clickOpens: false
        });
        flatpickr('#effectiveDateEdit', {
            "minDate": new Date().fp_incr(1),
            dateFormat: "d-m-Y",
        });
        flatpickr('#expirationDateEdit', {
            "minDate": new Date().fp_incr(1),
            dateFormat: "d-m-Y",
        });

        tinymce.init({
            selector: '#contentDocumentaryEdit',
            plugins: 'image media link tinydrive code imagetools paste',
            toolbar: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
            image_title: true,
            automatic_uploads: true,
            file_picker_types: 'file image media',
            images_upload_handler: function (blobInfo, success, failure) {
                var xhr, formData;
                xhr = new XMLHttpRequest();
                xhr.withCredentials = false;
                xhr.open('POST', '/uploads');
                xhr.onload = function () {
                    var json;

                    if (xhr.status != 200) {
                        failure('HTTP Error: ' + xhr.status);
                        return;
                    }
                    json = JSON.parse(xhr.responseText);

                    if (!json || typeof json.location != 'string') {
                        failure('Invalid JSON: ' + xhr.responseText);
                        return;
                    }
                    success(json.location);
                };
                formData = new FormData();
                formData.append('file', blobInfo.blob(), blobInfo.filename());
                xhr.send(formData);
            },
        });

        // todo: select users
        $(window).load(function () {

            var data = [
                { "id": 0, "text": "Không phản hồi" },
                { "id": 1, "text": "Có phản hồi" }
            ];
            $("#selectTypeDocumentary").select2({
                placeholder: "Loại công văn...",
                minimumResultsForSearch: Infinity,
                data: data,
            });
            callApi('department/lists', 'Get').then(res => {
                return res.json();
            }).then(res => {
                var data = res.items.map(x => { return { "id": x.id, "text": x.name } });
                $("#selectUser2").select2({
                    placeholder: "Phòng ban...",
                    minimumResultsForSearch: Infinity,
                    data: data,
                });
            })
        });
        // todo uploads
        $("#fileUploadsEdit").change(function () {
            const formData = new FormData();
            const file = document.querySelector("#fileUploadsEdit");
            for (let i = 0; i < file.files.length; i++) {
                formData.append('files', file.files[i]);
            }
            uploads('uploads/multiple', 'POST', formData).then(res => {
                return res.json();
            }).then(res => {
                let box = $("#listImageEdit");
                let div = document.createElement("div");
                div.className = "d-flex mt-2";
                res.location.map(x => {
                    var link, img;
                    switch (x.type) {
                        case "application/msword": case "application/vnd.openxmlformats-officedocument.wordprocessingml.document":
                            link = document.createElement("a");
                            link.setAttribute("download", "true");
                            img = document.createElement("img");
                            link.className = "link-upload pointer";
                            img.className = "image-upload";
                            link.href = `${host}/${x.url}`;
                            img.src = `${host}/assets/images/document.png`;
                            link.appendChild(img);
                            div.appendChild(link);
                            break;
                        case "image/jpeg": case "image/png": case "image/jpg": case "image/jepg": case "image/gif":
                            img = document.createElement("img");
                            img.className = "image-upload";
                            img.src = `${host}/${x.url}`;
                            div.appendChild(img);
                            break;
                    }
                })
                box.append(div);
                box.attr("data-value", encodeURIComponent(JSON.stringify(res.location)))
            })
        });

        // todo : edit
        $(document).on('click', '.detail-document', function () {
            $("#processShow").removeAttr('class');
            $("#processShow").attr('class', 'd-none');
            const data = JSON.parse(decodeURIComponent($(this).attr("data-value")));
            callApi('documentary/attachments/' + data.idDocumentary, 'Get').then(res => {
                return res.json();
            }).then(res => {
                if (res.success) {
                    let images = res.items.map(x => host + "/" + "assets/uploads/" + x.url);
                    let box = $("#listImageEdit");
                    let div = document.createElement("div");
                    div.className = "d-flex mt-2";
                    if (images.length > 0) {
                        box.empty();
                        res.items.map(x => {
                            var link, img;
                            switch (x.type) {
                                case "application/msword": case "application/vnd.openxmlformats-officedocument.wordprocessingml.document":
                                    link = document.createElement("a");
                                    link.setAttribute("download", "true");
                                    img = document.createElement("img");
                                    link.className = "link-upload pointer";
                                    img.className = "image-upload";
                                    link.href = `${host}/${x.url}`;
                                    img.src = `${host}/assets/images/document.png`;
                                    link.appendChild(img);
                                    div.appendChild(link);
                                    break;
                                case "image/jpeg": case "image/png": case "image/jpg": case "image/jepg": case "image/gif":
                                    img = document.createElement("img");
                                    img.className = "image-upload";
                                    img.src = `${host}/assets/uploads/${x.url}`;
                                    link = document.createElement("a");
                                    link.setAttribute("target", "_blank");
                                    link.setAttribute("href", img.src);
                                    link.appendChild(img);
                                    div.appendChild(link);
                                    break;
                            }
                        })
                        box.append(div);
                        box.attr("data-value", encodeURIComponent(JSON.stringify(res.items)));
                    } else {
                        box.empty();
                    }
                    // listTagsEdit
                }
            })
            callApi('documentary/users/' + data.idDocumentary, 'Get').then(res => {
                return res.json();
            }).then(res => {
                if (res.success) {
                    const users = res.items.map(x => { return x.idDepartment });
                    $('#selectUser2 option').map(function () {
                        let id = parseInt($(this).val());
                        if (users.includes(id)) {
                            $(this).prop("selected", "selected").trigger('change');
                        } else {
                            $(this).removeProp("selected").trigger('change');
                        }
                    });
                }
            })
            $("#detailDocumentModal").modal("show");
            $("#deleteDocument").attr("data-id", data.idDocumentary);
            $("#dataIdDocument").attr("data-id", data.idDocumentary);
            $("#submitDocumentaryEdit").attr("data-id", data.idDocumentary);
            $("#numberDocumentaryEdit").val(data.numberDocumentary);
            $("#nameEdit").val(data.name);
            $("#addressSendingEdit").val(data.addressSending);
            $("#addressSignEdit").val(data.addressSign);
            $(".select-category").val(data.idcategory);
            $("#calendarTomorrowEdit").val(moment(data.createdAt).format("DD-MM-YYYY"));
            $("#effectiveDateEdit").val(moment(data.effectiveDate).format("DD-MM-YYYY"));
            $("#expirationDateEdit").val(moment(data.expirationDate).format("DD-MM-YYYY"));
            $("#summaryEdit").val(data.summary);
            $("#selectTypeDocumentary").val(data.type);
            $("#selectStatusDocumentary").val(data.status);
            tinymce.get("contentDocumentaryEdit")?.setContent(data.content);
            $("#selectTypeDocumentary").prop("selected", "selected").trigger('change');
            $("#selectStatusDocumentary").prop("selected", "selected").trigger('change');
            if (data.type == 1) {
                $("#processShow").removeClass("d-none");
                $("#process").val(data.process);
            }

            callApi('tags/tags-documentary/' + data.idDocumentary, 'Get').then(res => {
                return res.json();
            }).then(res => {
                if (res.success) {
                    $("#listTagsEdit").empty();
                    if (res.items.length > 0) {
                        let row = '';
                        res.items.map((x) => {
                            row = `<div data-id="${x.id}" class="rounded items-assign border align-items-center d-flex text-center justify-content-center text-white p-2 pointer mb-1" style="background-color:${x.code}">
                                    <div>${x.name}</div>
                                <div>
                                `;
                            $("#listTagsEdit").append(row);
                        });
                    } else {
                        $("#listTagsEdit").empty();
                    }
                }
            })
        });

        //tode : delete documentary
        $("#deleteDocument").click(function () {
            swal("Bạn có muốn xóa", "confirm").then(x => {
                if (x) {
                    const id = $(this).attr("data-id");
                    callApi('documentary/' + id, 'Delete').then(res => {
                        return res.json();
                    }).then(res => {
                        if (res.success) {
                            notify("success", "Xóa thành công");
                            $("#detailDocumentModal").modal("hide");
                        }
                    })
                }
            })
        })

        //todo: submit edit
        $("#submitDocumentaryEdit").click(function () {
            const numberDocumentary = $("#numberDocumentaryEdit").val();
            const name = $("#nameEdit").val();
            const addressSending = $("#addressSendingEdit").val();
            const addressSign = $("#addressSignEdit").val();
            const selectCategory = $(".select-category").val();
            const selectUser = $("#selectUser3").val();
            const selectDep = $("#selectUser2").val();
            const calendarTomorrow = $("#calendarTomorrowEdit").val();
            const effectiveDate = $("#effectiveDateEdit").val();
            const expirationDate = $("#expirationDateEdit").val();
            const summary = $("#summaryEdit").val();
            var content = tinymce.get("contentDocumentaryEdit").getContent();
            const dataImage = $("#listImageEdit").attr("data-value");
            const id = $(this).attr("data-id");
            const type = $("#selectTypeDocumentary").val();
            const status = $("#selectStatusDocumentary").val();
            const process = $("#process").val() || 0;
            var urlImage;
            if (dataImage) {
                urlImage = JSON.parse(decodeURIComponent(dataImage));
            } else {
                urlImage = [];
            }
            const data = {
                numberDocumentary,
                name,
                addressSending,
                addressSign,
                selectCategory,
                selectUser,
                selectDep,
                calendarTomorrow: moment(flatpickr.parseDate(calendarTomorrow, "d/m/Y")).format("YYYY-MM-DD h:mm:ss"),
                effectiveDate: moment(flatpickr.parseDate(effectiveDate, "d/m/Y")).format("YYYY-MM-DD h:mm:ss"),
                expirationDate: moment(flatpickr.parseDate(expirationDate, "d/m/Y")).format("YYYY-MM-DD h:mm:ss"),
                summary,
                content,
                urlImage,
                type,
                status,
                process
            }

            callApi('documentary/' + id, 'Put', data).then(res => {
                return res.json();
            }).then(res => {
                if (res.success) {
                    notify("success", "Sửa thành công");
                    $("#detailDocumentModal").modal("hide");
                    // setTimeout(() => {
                    //     // window.location.href = window.location.href;
                    // }, 1000);
                } else {
                    notify("error", "Sửa không thành công");
                }
            }).catch(x => notify("error", "Sửa không thành công"))
        });

        function openTags() {
            $("#modalAssignTags").modal("show");
            const id = $("#dataIdDocument").attr("data-id");
            // listTagsAssign
            callApi('tags/tags-documentary/' + id, 'get').then(res => {
                return res.json();
            }).then(res => {
                let tags = res.items.map(x => { return x.idTag });
                callApi('tags/list', 'get').then(res => {
                    return res.json();
                }).then(res => {
                    if (res.success) {
                        $("#listTagsAssign").empty();
                        if (res.items.length > 0) {
                            let row = '';
                            res.items.map((x) => {
                                row = `<div data-id="${x.id}" class="items-assign border align-items-center d-flex text-center justify-content-center text-white p-2 pointer mb-1" style="background-color:${x.code}">
                                    <div>${x.name}</div>
                                    ${tags.includes(x.id) ? "<i class='ml-2 fa fa-check'></i>" : ""}
                                <div>
                                `;
                                $("#listTagsAssign").append(row);
                            });
                        }
                    }
                }).catch(x => console.log(x))

            })
        }
        $(document).on("click", ".items-assign", function () {
            const idTag = $(this).attr("data-id");
            const idDocumentary = $("#dataIdDocument").attr("data-id");
            const data = { idTag, idDocumentary };
            if ($(this).children("i").length > 0) {
                callApi(`tags/tags-documentary/${idTag}/${idDocumentary}`, 'delete').then(res => {
                    return res.json();
                }).then(res => {
                    if (res.success) {
                        $(this).children("i").remove();
                        $("#listTagsEdit").find(`[data-id='${res.items.id}']`).remove();
                    }
                })
            } else {
                callApi('tags/tags-documentary', 'post', data).then(res => {
                    return res.json();
                }).then(res => {
                    if (res.success) {
                        $(this).append("<i class='ml-2 fa fa-check'></i>");
                        const row = `<div data-id="${res.items.id}" 
                        class="rounded items-assign border align-items-center d-flex text-center justify-content-center text-white p-2 pointer mb-1" style="background-color:${res.items.code}">
                                    <div>${res.items.name}</div>
                                <div>
                                `;
                        $("#listTagsEdit").append(row);
                    }
                })
            }
        });
    </script>